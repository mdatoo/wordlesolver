{
    "folders": [
        {
            "path": "../"
        }
    ],
    "launch": {
        "version": "0.2.0",
        "configurations": [
            {
                "name": "Python: Run",
                "type": "python",
                "request": "launch",
                "program": "main.py",
                "console": "integratedTerminal",
                "justMyCode": true,
                "args": [
                    "${input:generator}",
                    "${input:solver}"
                ]
            },
            {
                "name": "Python: Train",
                "type": "python",
                "request": "launch",
                "program": "train.py",
                "console": "integratedTerminal",
                "justMyCode": true,
                "args": [
                    "${input:trainable_solver}"
                ]
            }
        ],
        "inputs": [
            {
                "id": "generator",
                "type": "promptString",
                "description": "Word generator to use",
                "default": "FakeGenerator"
            },
            {
                "id": "solver",
                "type": "promptString",
                "description": "Wordle solver to use",
                "default": "MaximiseMatchesSolver"
            },
            {
                "id": "trainable_solver",
                "type": "promptString",
                "description": "Wordle solver to use",
                "default": "PPOSolver"
            }
        ]
    },
    "tasks": {
        "version": "2.0.0",
        "command": "cmd.exe",
        "tasks": [
            {
                "label": "Python: Run",
                "type": "shell",
                "command": "${command:python.interpreterPath}",
                "problemMatcher": [],
                "args": [
                    "main.py",
                    "${input:generator}",
                    "${input:solver}"
                ],
            },
            {
                "label": "Python: Train",
                "type": "shell",
                "command": "${command:python.interpreterPath}",
                "problemMatcher": [],
                "args": [
                    "train.py",
                    "${input:trainable_solver}"
                ],
            }
        ],
        "inputs": [
            {
                "id": "generator",
                "type": "promptString",
                "description": "Word generator to use",
                "default": "FakeGenerator"
            },
            {
                "id": "solver",
                "type": "promptString",
                "description": "Wordle solver to use",
                "default": "MaximiseMatchesSolver"
            },
            {
                "id": "trainable_solver",
                "type": "promptString",
                "description": "Wordle solver to use",
                "default": "PPOSolver"
            }
        ]
    },
    "settings": {
        "[python]": {
            "editor.defaultFormatter": "ms-python.black-formatter",
            "editor.formatOnSave": true,
            "editor.codeActionsOnSave": {
                "source.organizeImports": true
            }
        },
        "isort.args": [
            "--profile",
            "black",
            "--known-local-folder",
            "wordlesolver",
            "--known-local-folder",
            "tests"
        ],
        "python.linting.enabled": true,
        "python.linting.banditEnabled": true,
        "python.linting.banditArgs": ["--configfile", "bandit.yaml"],
        "python.formatting.provider": "black",
        "python.formatting.blackArgs": ["--line-length", "120"],
        "python.linting.mypyEnabled": true,
        "python.linting.mypyArgs": [
            "--follow-imports=silent",
            "--ignore-missing-imports",
            "--show-column-numbers",
            "--no-pretty",
            "--strict"
        ],
        "python.linting.pydocstyleEnabled": true,
        "python.linting.pylintEnabled": true,
        "python.testing.pytestArgs": [
            "tests"
        ],
        "python.testing.unittestEnabled": false,
        "python.testing.pytestEnabled": true
    },
    "extensions": {
        "recommendations": [
            "donjayamanne.python-extension-pack",
            "ms-python.black-formatter"
        ]
    }
}
